{
  "name": "bitcoin-node-api",
  "author": {
    "name": "Niel de la Rouviere"
  },
  "description": "Bitcoin-Node-Api is an Express middleware plugin that exposes URLs for quick development and interfacing with a bitcoind Bitcoin wallet.",
  "version": "0.1.0",
  "main": "lib/api.js",
  "repository": {
    "type": "git",
    "url": "git@github.com:nieldlr/Bitcoin-Node-Api.git"
  },
  "dependencies": {
    "express": "3.3.x",
    "bitcoin": "1.7.0"
  },
  "keywords": [
    "bitcoin",
    "node",
    "api"
  ],
  "readme": "# bitcoin-node-api\n\nBitcoin-Node-Api is an Express middleware plugin that easily exposes a URL structure for interfacing with a bitcoind Bitcoin wallet.\n\nNB: The middleware is experimental at present. Certain JSON-RPC methods are not supported yet and/or experimental. These are methods with more complex parameters that do not fit easily into a query string:\n\n- addmultisigaddress\n- createmultisig\n- createrawtransaction\n- getaddednodeinfo\n- lockunspent\n- sendmany\n- signrawtransaction\n- submitblock\n\nThese methods will be added in the future. If there any other problems with the other methods, please report the bugs.\n\n## Install\n\n```javascript\nnpm install bitcoin-node-api\n```\n\n## How to use\n\n### Node.js\n\n```javascript\nvar bitcoinapi = require('bitcoin-node-api');\nvar express = require('express');\nvar app = express();\n\n//Username and password relate to those set in the bitcoin.conf file\n\nvar wallet = {\n  host: 'localhost',\n  port: 8332,\n  user: 'username',\n  pass: 'password'\n};\n\nbitcoinapi.setWalletDetails(wallet);\nbitcoinapi.setAccess('default-safe'); //Access control\napp.use('/bitcoin/api', bitcoinapi.app); //Bind the middleware to any chosen url\n\napp.listen(3000);\n```\n\n### Client/Browser\n\nJust add the method name after the binded url.\n\n* http://localhost:5000/URL/METHOD\n\nFor example:\n\n* http://localhost:5000/bitcoin/api/getinfo\n\nThis returns data exactly as would be expected from the JSON-RPC api.\n\n```javascript\n{\n  \"version\": 80300,\n  \"protocolversion\": 70001,\n  \"walletversion\": 60000,\n  \"balance\": 4.3222,\n  \"blocks\": 245645,\n  \"timeoffset\": -2,\n  \"connections\": 8,\n  \"proxy\": \"\",\n  \"difficulty\": 21335329.113983,\n  \"testnet\": false,\n  \"keypoololdest\": 1368414896,\n  \"keypoolsize\": 101,\n  \"paytxfee\": 0.0001,\n  \"unlocked_until\": 0,\n  \"errors\": \"\"\n}\n```\n\nParameters are sent via a query string:\n\n* http://localhost:3000/bitcoin/api/gettransaction?txid=d6c7e35ff9c9623208c22ee37a118ad523ae6c2d137d10053739cb03dbac62e0\n\n```javascript\n{\n  \"amount\": 0.002,\n  \"confirmations\": 1321,\n  \"blockhash\": \"000000000000009d0a2bb76c81dd185d1f6c28256037baef7b3345b7a7e958c7\",\n  \"blockindex\": 150,\n  \"blocktime\": 1372728756,\n  \"txid\": \"d6c7e35ff9c9623208c22ee37a118ad523ae6c2d137d10053739cb03dbac62e0\",\n  \"time\": 1372728436,\n  \"timereceived\": 1372728436,\n  \"details\": [\n    {\n      \"account\": \"localtest\",\n      \"address\": \"1Htev475XRVYfenku7ZWXGPSun15ESynCq\",\n      \"category\": \"receive\",\n      \"amount\": 0.002\n    }\n  ]\n}\n```\n\nConsult the [API call list](https://en.bitcoin.it/wiki/Original_Bitcoin_client/API_Calls_list) for parameter information.\n\n\n## Access Control\n\n### .setWalletPassphrase(passphrase);\n\nIf you have encrypted your wallet.dat you need to set the passphrase before attaching the middleware.\n```javascript\nbitcoinapi.setWalletDetails(wallet);\nbitcoinapi.setWalletPassphrase(passphrase);\napp.use('/bitcoin/api', bitcoinapi.app);\n```\n\n### .setAccces(type, accesslist);\n\nThe .setAccess method controls the access to the urls. By default all commands are accessible. The methods takes two parameters: type (string) and accesslist (array). To restrict access there are two ways to do this:\n\n#### 'only'\n\nThe 'only' type only exposes the methods given by an array of methods as the accesslist parameter.\n\n```javascript\n//Only allow the getinfo method\nbitcoinapi.setAccess('only', ['getinfo']);\n```\n\n#### 'restrict'\n\nThe 'restrict' type prevents methods from being accessed.\n\n```javascript\nbitcoinapi.setAccess('restrict', ['dumpprivkey', 'sendmany']);\n```\n\n#### 'default-safe'\n\nThis is an access profile. It prevents 'dumpprivkey' and 'walletpassphrasechange' being accessed. This prevents potential theft.\n\n```javascript\nbitcoinapi.setAccess('default-safe');\n```\n\n## Projects\n\nBitcoin-Node-Api is used in the following projects:\n\n* [Min.io](http://min.io)\n\n# Licence\n\nCopyright (C) 2013 Niel de la Rouviere\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/nieldlr/Bitcoin-Node-Api/issues"
  },
  "_id": "bitcoin-node-api@0.1.0",
  "dist": {
    "shasum": "cf59f64d56fd8ac54f049fcd0277e57400105e84"
  },
  "_from": "bitcoin-node-api@0.1.0",
  "_resolved": "https://registry.npmjs.org/bitcoin-node-api/-/bitcoin-node-api-0.1.0.tgz"
}
